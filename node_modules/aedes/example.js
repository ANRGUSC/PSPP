'use strict'

var aedes = require('./aedes')()
var server = require('net').createServer(aedes.handle)
var httpServer = require('http').createServer()
var ws = require('websocket-stream')
var port = 1883
var wsPort = 8888
var  topics = []
var i=0


server.listen(port, function () {
  console.log('server listening on port', port)
})

ws.createServer({
  server: httpServer
}, aedes.handle)


httpServer.listen(wsPort, function () {
  console.log('websocket server listening on port', wsPort)
})

aedes.on('clientError', function (client, err) {
  console.log('websocket server listening on port', wsPort)

  console.log('client error', client.id, err.message, err.stack)
})

aedes.on('connectionError', function (client, err) {
  console.log('client error', client, err.message, err.stack)
})

aedes.on('publish', function (packet, client) {
  if (client) {
    console.log('message from client', client.id)
    topics[i] = packet.topic
    console.log(`${packet.topic} added`)
    i++
    aedes.authorizePublish(client,packet, function(){
      console.log('Hi there')
    })

    for (var j=0; j<topics.length; j++){
      console.log(`This is topic number ${j}, its name is ${topics[j]}`)
    }

  }
})

aedes.on('subscribe', function (subscriptions, client) {
  if (client) {
    aedes.authorizeSubscribe = function(client, subscriptions){
      
    }
    console.log('subscribe from client', subscriptions, client.id)
  }
})

aedes.on('client', function (client) {
  console.log('new client', client.id)
})

//Create list of topics 
//Every time we're one 
//When a client wants to subscribe, send the list of subscriptions

